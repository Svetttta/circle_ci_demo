version: 2.1

parameters:
  run_deployment_workflow:
    type: boolean
    default: True

# ----- STEPS -----
commands:
  step_print_gcp_func_name:
    steps:
      - run:
          name: Print GCP function name
          command: echo Function name - $GCP_FUNCTION
  step_print_gcp_info:
    steps:
      - step_print_gcp_func_name
      - run:
          name: Print GCP project name
          command: echo GCP project - $GCP_PROJECT
          no_output_timeout: 2m
  step_show_working_dir:
    steps:
      - run:
          name: Show working dir
          command: ls -la

  auth_gcp:
    steps:
      - run:
          name: Authorize GCloud Command Line Tool # echo <GCP-KEY-FILE> | base64 --wrap=0
          command: |
            echo $GCP_SERVICE_KEY | base64 --decode | gcloud auth activate-service-account --key-file=-

  deploy_gcp_function:
    steps:
      - auth_gcp
      - run:
          name: Deploy To Google Cloud Functions
          command: |
            gcloud functions deploy $GCP_FUNCTION \
              --entry-point store_data \
              --trigger-topic $PUBSUB_TOPIC \
              --region=$GCP_REGION \
              --runtime=python37 \
              --timeout=120 \
              --project $GCP_PROJECT
  create_bucket:
    steps:
      - auth_gcp
      - run:
          name: Create GCP bucket
          command: |
            gcp_list=$(gsutil ls -p $GCP_PROJECT | grep -P gs://$BUCKET_NAME/)
            if  [[ $gcp_list ]]
            then
              echo $BUCKET_NAME exists
            else
              gsutil mb -p $GCP_PROJECT -l $GCP_REGION gs://$BUCKET_NAME
            fi

# ----- EXECUTORS -----
executors:
  tests:
    docker:
      - image: circleci/python:3.7
  python:
    docker:
      - image: circleci/python:3.7
  gcp-sdk:
    docker:
      - image: google/cloud-sdk:latest
 #terraform:
 #  docker:
 #    - image: hashicorp/terraform:0.14.2
 #vault:
 #  docker:
 #    - image: vault

# ----- JOBS -----
jobs:
  unittests:
    executor: tests
    steps:
      - checkout
      - run:
          name: Print Current Build Number
          command: echo BUILD $CIRCLE_BUILD_NUM
      - run:
          name: Run unittests
          command: python -m unittest

  print_gcp_info:
    executor: python
    steps:
      - step_print_gcp_info
  show_working_dir:
    executor: python
    steps:
      - checkout
      - step_show_working_dir

  qa_deploy_gcp_function:
    executor: gcp-sdk
    steps:
      - checkout
      - deploy_gcp_function
  qa_create_pubsub_queue:
    executor: gcp-sdk
    steps:
      - checkout
      - auth_gcp
      - when:
          condition:
            equal: [gcloud pubsub topics list --filter=$PUBSUB_TOPIC, 'Listed 0 items.']
          steps:
            run: gcloud pubsub topics create $PUBSUB_TOPIC
 #qa_create_bucket:
 #  executor: gcp-sdk
 #  steps:
 #    - checkout
 #    - create_bucket

  dev_deploy_gcp_function:
    executor: gcp-sdk
    steps:
      - checkout
      - deploy_gcp_function
  dev_create_pubsub_queue:
    executor: gcp-sdk
    steps:
      - checkout
      - auth_gcp
      - when:
          condition:
            equal: [gcloud pubsub topics list --filter=$PUBSUB_TOPIC, 'Listed 0 items.']
          steps:
            run: gcloud pubsub topics create $PUBSUB_TOPIC
 #dev_create_bucket:
 #  executor: gcp-sdk
 #  steps:
 #    - checkout
 #    - create_bucket

  prod_deploy_gcp_function:
    executor: gcp-sdk
    steps:
      - checkout
      - deploy_gcp_function
  prod_create_pubsub_queue:
    executor: gcp-sdk
    steps:
      - checkout
      - auth_gcp
      - when:
          condition:
            equal: [gcloud pubsub topics list --filter=$PUBSUB_TOPIC, 'Listed 0 items.']
          steps:
            run: gcloud pubsub topics create $PUBSUB_TOPIC
 #prod_create_bucket:
 #  executor: gcp-sdk
 #  steps:
 #    - checkout
 #    - create_bucket


# ----- WORKFLOWS -----
workflows:
 version: 2
 tests:
   jobs:
     - unittests

 deployment:
   when: << pipeline.parameters.run_deployment_workflow >>
   jobs:
     - print_gcp_info:
         context: wf_dev
         filters:
           branches:
             only:
               - dev
               - qa
     - show_working_dir:
         requires:
           - print_gcp_info
         filters:
           branches:
             only:
               - dev

# ----- DEV PIPELINE -----
     - qa_create_pubsub_queue:
         context: wf_qa
         filters:
           branches:
             only:
               - qa
    #- qa_create_bucket:
    #    context: wf_qa
    #    filters:
    #      branches:
    #        only:
    #          - qa
     - qa_deploy_gcp_function:
         context: wf_qa
         requires:
           - qa_create_pubsub_queue
           #- qa_create_bucket
         filters:
           branches:
             only:
               - qa

     - hold_dev_gcp:
         type: approval
         filters:
           branches:
             only:
               - dev
     - dev_create_pubsub_queue:
         context: wf_dev
         requires:
           - hold_dev_gcp
         filters:
           branches:
             only:
               - dev
    #- dev_create_bucket:
    #    context: wf_dev
    #    requires:
    #      - hold_dev_gcp
    #    filters:
    #      branches:
    #        only:
    #          - dev
     - dev_deploy_gcp_function:
         context: wf_dev
         requires:
           - dev_create_pubsub_queue
           #- dev_create_bucket
         filters:
           branches:
             only:
               - dev

     - hold_prod_gcp:
         type: approval
         filters:
           branches:
             only:
               - prod
     - prod_create_pubsub_queue:
         context: wf_prod
         requires:
           - hold_prod_gcp
         filters:
           branches:
             only:
               - prod
    #- prod_create_bucket:
    #    context: wf_prod
    #    requires:
    #      - hold_prod_gcp
    #    filters:
    #      branches:
    #        only:
    #          - prod
     - prod_deploy_gcp_function:
         context: wf_prod
         requires:
           - prod_create_pubsub_queue
           #- prod_create_bucket
         filters:
           branches:
             only:
               - prod
